plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '1.0.21'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name "Modmaven"
        url "https://modmaven.dev"
    }

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }

    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name "TerraformersMC"
        url "https://maven.terraformersmc.com/releases/"
        content {
            // EMI
            includeGroup "dev.emi"
        }
    }

    maven { url = "https://maven.bawnorton.com/releases" }
    maven { url = "https://maven.kosmx.dev/" }

    maven {
        name = "Shadows of Fire's Maven"
        url "https://maven.shadowsoffire.dev/releases"
    }

    maven {
        url "https://maven.latvian.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.latvian.apps"
        }
    }

    maven {
        url 'https://jitpack.io'
        content {
            includeGroup "com.github.rtyley"
        }
    }

    maven {
        name = "Illusive Soulworks maven"
        url = "https://maven.theillusivec4.top/"
    }
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }

        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    compileOnly "maven.modrinth:farmers-delight:${minecraft_version}-${farmers_delight_version}"
    compileOnly "maven.modrinth:my-nethers-delight:${mynethersdelight_version}"

    implementation "org.appliedenergistics:appliedenergistics2:${ae2_version}"

    implementation "dev.emi:emi-neoforge:${emi_version}"
    runtimeOnly "maven.modrinth:tmrv:${tmrv_version}+mc.21.1"

    compileOnly "mekanism:Mekanism:${minecraft_version}-${mekanism_version}:all"
    compileOnly "curse.maven:applied-mekanistics-574300:5978711"

    runtimeOnly "mekanism:Mekanism:${minecraft_version}-${mekanism_version}"
    runtimeOnly "mekanism:Mekanism:${minecraft_version}-${mekanism_version}:generators"
    runtimeOnly "mekanism:Mekanism:${minecraft_version}-${mekanism_version}:tools"

    implementation "curse.maven:just-dire-things-1002348:6369120"

    implementation "maven.modrinth:cable-facades:${cable_facades_version}"

    compileOnly "curse.maven:xycraft-653786:5601037"

    compileOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}"
    implementation "curse.maven:industrial-foregoing-266515:6626624"
    implementation "curse.maven:titanium-287342:6443608"

    compileOnly "curse.maven:lendercataclysm-551586:6501450"
    compileOnly "curse.maven:lionfish-api-1001614:6168249"

    runtimeOnly "dev.latvian.mods:kubejs-neoforge:${kubejs_version}"

    // Just used to verify nbt ordering works with creative sort
    runtimeOnly "dev.shadowsoffire:Placebo:${minecraft_version}-${placeboVersion}"
    runtimeOnly "dev.shadowsoffire:ApothicAttributes:${minecraft_version}-${apothAttribsVersion}"
    runtimeOnly "dev.shadowsoffire:ApothicSpawners:${minecraft_version}-${apothSpawnersVersion}"
    runtimeOnly "dev.shadowsoffire:ApothicEnchanting:${minecraft_version}-${apothEnchVersion}"
    runtimeOnly "dev.shadowsoffire:Apotheosis:${minecraft_version}-${apothVersion}"

    // For more info:
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            minecraft_version             : minecraft_version,
            minecraft_version_range       : minecraft_version_range,
            neo_version                   : neo_version,
            neo_version_range             : neo_version_range,
            loader_version_range          : loader_version_range,
            mod_id                        : mod_id,
            mod_name                      : mod_name,
            mod_license                   : mod_license,
            mod_version                   : mod_version,
            mod_authors                   : mod_authors,
            mod_description               : mod_description,
            mynethersdelight_version_range: mynethersdelight_version_range,
            ae2_version_range             : ae2_version_range,
    ]
    inputs.properties replaceProperties

    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}

sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}